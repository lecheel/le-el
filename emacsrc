(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(package-initialize)

(add-to-list 'auto-mode-alist '("\\emacsrc\\'" . lisp-mode))

(require 'evil)
(evil-mode 1)
(which-key-mode 1)

(require 'evil-leader)
(global-evil-leader-mode)

(evil-leader/set-leader ",")

;;
;; magit ...
;;
(evil-leader/set-key
	"gs" 'magit-status
	"gl" 'magit-reflog
	"gd" 'magit-diff
)

;;
;; Personal binding leStyle
;;
(global-set-key (kbd "M-d") 'kill-whole-line)
(global-set-key (kbd "M-b") 'ace-jump-buffer)
(global-set-key (kbd "M-y") 'er/expand-region)
(global-set-key (kbd "M-q") 'save-buffers-kill-terminal)
(global-set-key [(f3)] 'save-buffer)
(global-set-key [(f6)] 'ace-window)

;;; super M-x
(global-set-key (kbd "M-x") 'helm-M-x)


(setq visible-bell t)
(defalias 'yes-or-no-p 'y-or-n-p)

;;; override key bindind is here
;;;
(define-key evil-normal-state-map "\C-y" 'yank)
(define-key evil-insert-state-map "\C-y" 'yank)
(define-key evil-visual-state-map "\C-y" 'yank)

(define-key evil-normal-state-map "\C-w" 'evil-delete)
(define-key evil-insert-state-map "\C-w" 'evil-delete)
(define-key evil-visual-state-map "\C-w" 'evil-delete)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(backup-inhibited t t)
 '(make-backup-files nil)
 '(custom-enabled-themes (quote (wombat))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(dired-directory ((t nil)))
 '(ediff-odd-diff-A ((t (:background "Grey" :foreground "green"))))
 '(helm-ff-dirs ((t nil)))
 '(helm-selection ((t (:background "yellow" :distant-foreground "black"))))
 '(helm-source-header ((t (:background "white" :foreground "black" :weight bold :height 1.3 :family "Sans Serif"))))
 '(helm-visible-mark ((t (:background "brightcyan"))))
 '(highlight ((t (:background "yellow"))))
 '(lazy-highlight ((t (:background "green" :foreground "brightyellow"))))
 '(minibuffer-prompt ((t (:foreground "green"))))
 '(region ((t (:background "green")))))
