;;
;; ln -s emacsrc ~/.emacs
;;


;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(load "~/.emacs.d/le-loadpackages.el")
(add-hook 'after-init-hook '(lambda ()
			      (load "~/.emacs.d/le-el.el")
			      ))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auto-save-default nil)
 '(backup-inhibited t t)
 '(bmkp-last-as-first-bookmark-file "~/.emacs.d/bookmarks")
 '(column-number-mode t)
 '(custom-safe-themes
   (quote
    ("9b1c580339183a8661a84f5864a6c363260c80136bd20ac9f00d7e1d662e936a" "6998bd3671091820a6930b52aab30b776faea41449b4246fdce14079b3e7d125" default)))
 '(echo-keystrokes 0.01)
 '(ediff-split-window-function (quote split-window-horizontally))
 '(fill-column 78)
 '(frame-title-format (quote ("%f - " user-real-login-name "@" system-name)) t)
 '(history-delete-duplicates t)
 '(indent-tabs-mode nil)
 '(indicate-empty-lines t)
 '(inhibit-startup-screen t)
 '(initial-scratch-message nil)
 '(linum-format "  %d  ")
 '(magit-log-arguments (quote ("--graph" "--color" "--decorate" "--patch")))
 '(make-backup-files nil)
 '(menu-bar-mode nil)
 '(org-agenda-files (quote ("~/.emacs.d/tips.org")))
 '(puppet-indent-level tab-width)
 '(recentf-max-saved-items 75)
 '(require-final-newline t)
 '(setq inhibit-startup-message t)
 '(show-paren-delay 0)
 '(show-paren-mode t)
 '(tab-width 4)
 '(transient-mark-mode t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(diff-refine-changed ((t (:background "yellow"))))
 '(ediff-even-diff-Ancestor ((t (:background "Grey" :foreground "green"))))
 '(ediff-even-diff-B ((t (:background "Grey" :foreground "magenta"))))
 '(ediff-fine-diff-B ((t (:background "cyan"))))
 '(ediff-odd-diff-A ((t (:background "Grey" :foreground "blue"))))
 '(ediff-odd-diff-C ((t (:background "Grey" :foreground "green"))))
 '(font-lock-comment-face ((t (:foreground "brightblack"))))
 '(font-lock-string-face ((t (:foreground "color-166"))))
 '(org-agenda-structure ((t (:foreground "blue"))))
 '(org-clock-overlay ((t (:background "blue"))))
 '(org-table ((t (:foreground "green")))))

(setq visible-bell t)
(defalias 'yes-or-no-p 'y-or-n-p)

;;;
;;; override key bindind is here
;;;
(define-key evil-normal-state-map "\C-y" 'yank)
(define-key evil-insert-state-map "\C-y" 'yank)
(define-key evil-visual-state-map "\C-y" 'yank)

(define-key evil-normal-state-map "\C-w" 'evil-delete)
(define-key evil-insert-state-map "\C-w" 'evil-delete)
(define-key evil-visual-state-map "\C-w" 'evil-delete)

;;(define-key evil-normal-state-map "\C-k" 'kill-line)
(define-key evil-insert-state-map "\C-k" 'paredit-kill)
(define-key evil-visual-state-map "\C-k" 'paredit-kill)

(define-key evil-normal-state-map ";" 	 'previous-error)
(define-key evil-normal-state-map "'" 	 'next-error)


;; Customizing colors used in diff mode
(defun custom-diff-colors ()
  "update the colors for diff faces"
  (set-face-attribute
   'diff-added nil :foreground "green")
  (set-face-attribute
   'diff-removed nil :foreground "red")
  (set-face-attribute
   'diff-changed nil :foreground "purple")
  (set-face-attribute
   'diff-function nil :foreground "black")
  (set-face-attribute
   'diff-refine-added nil :foreground "black")
  (set-face-attribute
   'diff-refine-removed nil :foreground "black")
  (set-face-attribute
   'diff-nonexistent nil :foreground "black")
  (set-face-attribute
   'diff-header nil :foreground "black")
  (set-face-attribute
   'diff-hunk-header nil :foreground "black")
  (set-face-attribute
   'magit-section-highlight nil :foreground "black")
  (set-face-attribute
   'airline-visual-inner nil :foreground "black")
  (set-face-attribute
   'cscope-file-face nil :foreground "green")
  (set-face-attribute
   'dired-directory nil :foreground "green")
  (set-face-attribute
   'font-lock-function-name-face nil :foreground "yellow")
  (set-face-attribute
   'font-lock-doc-face nil :foreground "green")
)



;;  (custom-theme-set-faces
;;   'airline-colorpaper
;;   ;; default
;;   `(lazy-highlight ((,class (:foreground ,fg2 :background ,bg3))))
;;   )
(eval-after-load "diff-mode" '(custom-diff-colors))

;;(global-set-key "\C-h" 'delete-backward-char)

(define-key isearch-mode-map [(control h)] 'isearch-delete-char)

(define-key evil-motion-state-map "K" 'find-grep-word)

(defun evil-undefine ()
   (interactive)
    (let (evil-mode-map-alist)
         (call-interactively (key-binding (this-command-keys)))))

